{"version":3,"sources":["components/Window/Window.js","App.js","reportWebVitals.js","index.js"],"names":["WindowButton","type","onClick","className","Window","useState","windowState","setWindowState","evnt","preventDefault","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAmCA,SAASA,EAAT,GAA0C,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QAC5B,OACE,wBAAQC,UAAU,iBAAiBD,QAASA,EAA5C,SACE,qBAAKC,UAAS,0BAAqBF,OAK1BG,MAzCf,WAAmB,IAAD,EACwBC,mBAAS,WADjC,mBACRC,EADQ,KACKC,EADL,KAkBhB,OACE,qBAAKJ,UAAS,yBAAoBG,GAAlC,SACE,wBAAQH,UAAU,iBAAlB,SACE,qBAAKA,UAAU,gBAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,cAACH,EAAD,CAAcC,KAAK,QAAQC,QApBjB,SAACM,GACnBA,EAAKC,iBACLF,EAAe,aAmBP,cAACP,EAAD,CAAcC,KAAK,WAAWC,QAhBjB,SAACM,GACtBA,EAAKC,iBACLF,EAA+B,cAAhBD,EAA8B,YAAc,cAenD,cAACN,EAAD,CAAcC,KAAK,WAAWC,QAZjB,SAACM,GACtBA,EAAKC,iBACLF,EAA+B,cAAhBD,EAA8B,YAAc,wB,MCNhDI,MARf,WACE,OACE,sBAAMP,UAAU,MAAhB,SACE,cAAC,EAAD,OCMSQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.841d8640.chunk.js","sourcesContent":["import { useState } from 'react';\n\nfunction Window() {\n  const [ windowState, setWindowState ] = useState('default');\n\n  const handleClose = (evnt) => {\n    evnt.preventDefault();\n    setWindowState('closed');\n  }\n\n  const handleMinimize = (evnt) => {\n    evnt.preventDefault();\n    setWindowState(windowState !== 'minimized' ? 'minimized' : 'default' );\n  }\n\n  const handleMaximize = (evnt) => {\n    evnt.preventDefault();\n    setWindowState(windowState !== 'maximized' ? 'maximized' : 'default' );\n  }\n\n  return (\n    <div className={`Window Window--${windowState}`}>\n      <header className=\"Window__header\">\n        <div className=\"Window__title\">\n          <div className=\"Window__controls\">\n            <WindowButton type=\"close\" onClick={handleClose} />\n            <WindowButton type=\"minimize\" onClick={handleMinimize} />\n            <WindowButton type=\"maximize\" onClick={handleMaximize} />\n          </div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nfunction WindowButton({ type, onClick }) {\n  return (\n    <button className=\"Window__button\" onClick={onClick}>\n      <div className={`Window__button--${type}`} />\n    </button>\n  );\n}\n\nexport default Window;","import Window from './components/Window';\nimport './App.css';\n\nfunction App() {\n  return (\n    <main className=\"App\">\n      <Window />      \n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}